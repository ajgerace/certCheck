    - name: retrieve certs to check expiration
      include_vars: 
        file: vars/crts2Check.yml
        
    - debug:
        msg: "certificate expire check date is {{crtExpireCheckDate}}"
      when: execDebug == "yes"

    - name: Retrieve profiles 
      uri:
        url: "https://{{ item.value['host'] }}/mgmt/tm/ltm/profile/client-ssl/~{{ item.value['partition'] }}~{{ item.key }}"
        method: GET 
        user:  "{{username}}"
        password: "{{ password }}"
        force_basic_auth: yes
        validate_certs: no
      loop: "{{certs2Check | dict2items  }}"
      register: clientsslList 

    - name: debug listing of clientssl profile 
      debug: 
        var: clientsslList
      when: execDebug == "yes"

    - name: Retrieve certificate expiration
      uri:
        url: "https://{{ item.item.value.host }}/mgmt/tm/sys/crypto/cert/~{{ item.json.partition }}~{{ item.json.cert.split('/')[2] }}"
        method: GET 
        user:  "{{ username }}"
        password: "{{ password }}"
        force_basic_auth: yes
        validate_certs: no
      loop: "{{clientsslList.results  }}"
      register: cert 

    - name: debug of cert results
      debug:
        var: cert.results
      when: execDebug == "yes"
 
    - name: Check certificate expiration
      set_fact:
        certNames2Renew: "{{ certNames2Renew |default({})| combine ( { item.item.json.name: { 'expiration': crtExpire , 'commonName': item.json.commonName, 'host': item.item.item.value.host, 'partition': item.item.item.value.partition  } }) }}"
      when:  crtExpire <= crtExpireCheckDate 
      loop: "{{cert.results }}"

    - debug:
        msg: "certificate {{certNames2Renew }} is about to expire "
      when: execDebug == "yes" and certNames2Renew | length > 0 
 